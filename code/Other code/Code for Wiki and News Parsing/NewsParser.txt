import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;




public class ParserNews extends DefaultHandler{
	static int count = 0;
	public static void main(String[] args){
		
		// TODO Auto-generated method stub
		File ipDirectory = new File("D:\\IR Project\\News\\01");
		String[] catDirectories = ipDirectory.list();
		
		String[] files;
		File dir;
		try {
			File tempFile1 = new File("D:\\IR Project\\News\\News1.xml");
			BufferedWriter writer1 = new BufferedWriter(new FileWriter(tempFile1));
			writer1.write("<add>");
			writer1.newLine();
			for (String cat : catDirectories) {
				dir = new File("D:\\IR Project\\News\\01"+ File.separator+ cat);
				files = dir.list();
				if (files == null)
					continue;
				for (String f : files) {
					System.out.println(dir + File.separator +f);
					File inputFile = new File(dir + File.separator +f);   // Your file  
					File tempFile = new File("D:\\IR Project\\myTempFile.xml");// temp file

					BufferedReader reader = new BufferedReader(new FileReader(inputFile));
					BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));

					String currentLine;

					while((currentLine = reader.readLine()) != null) {

					    if(currentLine.contains("<!DOCTYPE")) 
					    	continue;
					    else{
					    writer.write(currentLine);
					    }
					}
					writer.close();
//					writer1.write(dir + File.separator +f);
//					writer1.newLine();
					parse("D:\\IR Project\\myTempFile.xml", writer1);
				}
			}
		writer1.write("</add>");
		writer1.close();
//		boolean successful = tempFile.renameTo(inputFile);
//		System.out.println(successful);
//				parse("D:\\IR Project\\01\\01\\01\\1815721.xml");

		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}



	private static void parse(String filename, final BufferedWriter writer1){
		// TODO Auto-generated method stub
		count++;
		try {
			FileInputStream fis = new FileInputStream(filename);
			byte[] contents = new byte[fis.available()];
			fis.read(contents, 0, contents.length);
			String asString = new String(contents, "US-ASCII");
			byte[] newBytes = asString.getBytes("UTF-8");
			FileOutputStream fos = new FileOutputStream(filename);
			fos.write(newBytes);
			fos.close();
			} catch(Exception e) {
			e.printStackTrace();
			}
		try {
			writer1.write("<doc>");
			writer1.newLine();
			writer1.write("<field name=\"id\">N_"+ count +"</field>");
			writer1.newLine();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		 try {
			 
				SAXParserFactory factory = SAXParserFactory.newInstance();
				SAXParser saxParser = factory.newSAXParser();
			 
				DefaultHandler handler = new DefaultHandler() {
			 
				boolean title = false;
				boolean hl = false;
				boolean block = false;
				boolean text = false;
				boolean blockend = false;
				boolean checkflag = true;
				boolean checkflag1 = true;
				String day = "";
				String month = "";
				String year = "";
				String body = "";
				
				public void startElement(String uri, String localName,String qName, 
			                Attributes attributes) throws SAXException {
					
					//System.out.println("Start Element :" + qName);
					if (qName.equalsIgnoreCase("meta")) {
						if ((attributes.getValue("name")).equalsIgnoreCase("publication_day_of_month"))
						day = attributes.getValue("content");
					}
					if (qName.equalsIgnoreCase("meta")) {
						if ((attributes.getValue("name")).equalsIgnoreCase("publication_month"))
						month = attributes.getValue("content");
					}
					if (qName.equalsIgnoreCase("meta")) {
						if ((attributes.getValue("name")).equalsIgnoreCase("publication_year"))
						year = attributes.getValue("content");
					}
			 
					if (qName.equalsIgnoreCase("title")) {
						title = true;
					}
					if (qName.equalsIgnoreCase("hl1")) {
						hl = true;
					}
			 
					if (qName.equalsIgnoreCase("block")) {
						if ((attributes.getValue("class")).equalsIgnoreCase("full_text")){
							
							block = true;
							
						}
						
					}
					if (qName.equalsIgnoreCase("p") && block == true){
						text = true;
					} else text = false;
					if(day!="" && month!="" && year!="" && checkflag == true){
						try {
							writer1.write("<field name=\"date\">"+ month +"/"+ day +"/"+ year +"</field>");
							writer1.newLine();
							
						} catch (IOException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						checkflag = false;
					}
					
				}
			 
				public void endElement(String uri, String localName,
					String qName) throws SAXException {
					if (qName.equalsIgnoreCase("body")) {
						//System.out.println(true);
						try {
							//System.out.println(true);
							//System.out.println(body);
							writer1.write("<field name=\"body\">"+ body +"</field>");
						    writer1.newLine();
						    writer1.write("</doc>");
						    writer1.newLine();
						    blockend = false;
						
						} catch (IOException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}	
						
					}
					//System.out.println("End Element :" + qName);
			 
				}
			 
				public void characters(char ch[], int start, int length) throws SAXException {
			 
					//System.out.println("text : " + new String(ch, start, length));
					if ((title||hl) && checkflag1) {
						try {
							writer1.write("<field name=\"title\">"+new String(ch, start, length)+"</field>");
							writer1.newLine();
						} catch (IOException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						title = false;
						hl = false;	
						checkflag1 = false;
					}

					if (text) {
						
						
							if(body == ""){
								body = body + new String(ch, start, length);
							}
							else{
								body = body +"\n" + new String(ch, start, length);
							}
						
						
						text = false;
					}

			 
				}
			 
			     };
			     
			       saxParser.parse(filename, handler);
			       
			       
			     } catch (Exception e) {
			    	System.out.println(e.getMessage());
			     } 
		 		
			 
			   }
			 
			
	}

